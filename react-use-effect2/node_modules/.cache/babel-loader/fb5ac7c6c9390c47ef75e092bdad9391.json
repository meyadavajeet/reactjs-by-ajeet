{"ast":null,"code":"import _slicedToArray from \"D:\\\\reactjs\\\\react-tuts-thapa\\\\react-use-effect2\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\reactjs\\\\react-tuts-thapa\\\\react-use-effect2\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport ChnageTitle from './ChangeTitle';\n\nfunction App() {\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      num = _useState2[0],\n      setNum = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nums = _useState4[0],\n      setNums = _useState4[1]; //useEffect always need a function \n  // when we change in components then render method executes and whenever render method executes useEffect() methods automatically called;\n  //if you want to execute the useEffect method once only while page refresh you have to pass empty array [] like that by giving comma after clossing curly bracket\n  //if you want to execute useEffect() on button click please pass this state on this empty array [num] -> it executes when the first button clicked\n\n\n  useEffect(function () {\n    alert('i am clicked');\n    console.log('first button clicked');\n  }, [num]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      setNum(num + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"click to  Increment \", num), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      setNums(nums + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Click me \", nums), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ChnageTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["D:/reactjs/react-tuts-thapa/react-use-effect2/src/App.js"],"names":["React","useEffect","useState","ChnageTitle","App","num","setNum","nums","setNums","alert","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,GAAT,GAAe;AAAA,kBACSF,QAAQ,CAAC,CAAD,CADjB;AAAA;AAAA,MACNG,GADM;AAAA,MACDC,MADC;;AAAA,mBAEWJ,QAAQ,CAAC,CAAD,CAFnB;AAAA;AAAA,MAENK,IAFM;AAAA,MAEAC,OAFA,kBAIb;AACA;AACA;AACA;;;AACAP,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,KAAK,CAAC,cAAD,CAAL;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,GAHQ,EAGN,CAACN,GAAD,CAHM,CAAT;AAMA,sBACE,uDACE;AAAQ,IAAA,OAAO,EAAE,mBAAM;AAAEC,MAAAA,MAAM,CAACD,GAAG,GAAG,CAAP,CAAN;AAAiB,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAiEA,GAAjE,CADF,eAIE;AAAQ,IAAA,OAAO,EAAE,mBAAM;AAAEG,MAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AAAmB,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAwDA,IAAxD,CAJF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eASE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAaD;;AAED,eAAeH,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport ChnageTitle from './ChangeTitle';\n\nfunction App() {\n  const [num, setNum] = useState(0);\n  const [nums, setNums] = useState(0);\n\n  //useEffect always need a function \n  // when we change in components then render method executes and whenever render method executes useEffect() methods automatically called;\n  //if you want to execute the useEffect method once only while page refresh you have to pass empty array [] like that by giving comma after clossing curly bracket\n  //if you want to execute useEffect() on button click please pass this state on this empty array [num] -> it executes when the first button clicked\n  useEffect(() => {\n    alert('i am clicked');\n    console.log('first button clicked');\n  }, [num]\n  )\n\n  return (\n    <>\n      <button onClick={() => { setNum(num + 1) }}>click to  Increment {num}</button>\n\n\n      <button onClick={() => { setNums(nums + 1) }}>Click me {nums}</button>\n\n      <br/>\n      <br/>\n      <br/>\n      <ChnageTitle/>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}